name: Blog CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql

      - name: Cache build
        id: build-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer

      - name: Security
        run: composer audit

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Search wip
        run: |
          printf "\e[0;1mSearching for wip tags...\n"
          BEHAT_WIPS=$(find tests -name '*.feature' -exec grep -l "@wip" {} \;)
          PHPUNIT_WIPS=$(find tests -name '*.php' -exec grep -l "@group wip" {} \;)
          if [ -n "$BEHAT_WIPS" ] || [ -n "$PHPUNIT_WIPS" ]; then
            printf "\e[31;1m[KO]\e[0m\n\n"
            printf "%s\n" "$BEHAT_WIPS" | tr " " "\n"
            printf "%s\n" "$PHPUNIT_WIPS" | tr " " "\n"
            exit 1;
          else
            printf "\e[32;1m[OK]\e[0m\n";
          fi 

  static-analysis:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql

      - name: Download build files
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}

      - name: php-cs-fixer
        run: vendor/bin/php-cs-fixer fix --config .php-cs-fixer.dist.php --dry-run --diff

      - name: phpstan
        run: |
          bin/console cache:warmup
          vendor/bin/phpstan analyze -c phpstan.dist.neon --no-progress --memory-limit 1G

      - name: deptrac
        run: vendor/bin/deptrac

  tests:
    needs: build
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: blog
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: xdebug
          extensions: mbstring, intl, pdo_mysql

      - name: Use cached files from build
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}

      - name: Check if .env.ci exists
        run: test -f .env.ci || { echo "File .env.ci does not exist"; exit 1; }
      - name: Replace .env with .env.ci
        run: cp .env.ci .env

      - name: Ensure var Directory Exists
        run: mkdir -p var
      - name: Fix Permissions
        run: chmod -R 777 var && chmod -R 777 vendor
      - name: Start PHP Built-in Server
        run: php -S 127.0.0.1:8000 -t public > /dev/null 2>&1 &

      - name: PHPUnit
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/blog
        run: vendor/bin/phpunit --configuration phpunit.xml.dist --coverage-php=coverage/phpunit.cov

      - name: Upload code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: phpunit-coverage
          path: coverage/phpunit.cov

      - name: Behat
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/blog
        run: |
          chmod -R 777 var
          bin/console doctrine:database:drop --force -nq
          bin/console doctrine:database:create -nq
          bin/console doctrine:migrations:migrate -nq --allow-no-migration
          bin/console cache:warmup
          vendor/bin/behat -n --strict --format=progress --config behat.ci.yaml

      - name: Merge coverage parts
        run: vendor/bin/phpcov merge coverage --text coverage/total.text --cobertura coverage/cobertura.xml

      - name: Display coverage report
        run: cat coverage/total.text

      - name: Code Coverage Summary
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'coverage/cobertura.xml'
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '60 80'

      - name: Display Symfony logs
        if: failure()
        run: cat var/log/dev.log
